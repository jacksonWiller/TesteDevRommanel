version: '3.8'

services:
  postgres:
    image: postgres:12
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5434:5432"
    volumes:
      - ./data2:/var/lib/postgresql/data
      - ./Scripts:/scripts
    networks:
      - app-network

  db-init:
    container_name: db-migration
    image: postgres:12
    depends_on:
      - postgres
    volumes:
      - ./Scripts:/scripts
    command: >
      bash -c "
        echo 'Aguardando o postgres iniciar...'
        sleep 5
        echo 'Executando scripts...'
        PGPASSWORD=postgres psql -h postgres -U postgres -d postgres -f /scripts/migrations.sql
        PGPASSWORD=postgres psql -h postgres -U postgres -d postgres -f /scripts/insert.sql
        echo 'Scripts executados com sucesso!'
      "
    networks:
      - app-network

  api:
    build:
      context: ./Back/
      dockerfile: Clientes.Api/Dockerfile
    container_name: api_clientes
    ports:
      - "8090:8080"
      - "44380:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Postgres=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=postgres;
    networks:
      - app-network
    depends_on:
      - postgres
  

  frontend:
    build:
      context: ./Front/cliente-app
      dockerfile: Dockerfile
    container_name: angular_frontend
    ports:
      - "4200:80"
    networks:
      - app-network
    depends_on:
      - api

networks:
  app-network:
    driver: bridge